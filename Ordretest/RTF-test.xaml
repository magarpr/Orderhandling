<Activity mc:Ignorable="sap sap2010 sads" x:Class="RTF_test" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="RTF_test_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:a="clr-namespace:AteaDatatableActivities;assembly=AteaDatatableActivities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:maes="clr-namespace:Microsoft.Activities.Extensions.Statements;assembly=Microsoft.Activities.Extensions"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.uipath.com/workflow/activities/word"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:sd="clr-namespace:System.Data;assembly=System.Data"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Windows.Forms</x:String>
      <x:String>System.Windows.Forms.Layout</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.Windows.Forms</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="RTF-test" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Default="C:\Users\KermIT-R01\Desktop\PDF og RTF-test\order-554814.rtf" Name="strFilePath" />
      <Variable x:TypeArguments="x:String" Name="strPlainText" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Default="[new Dictionary(of String, String)]" Name="orderInfoDict" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New System.Data.DataTable]" Name="itemInfo" />
      <Variable x:TypeArguments="s:String[]" Name="strArrayOrder" />
      <Variable x:TypeArguments="x:String" Name="strContactName" />
      <Variable x:TypeArguments="x:String" Name="strShipCompanyName">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_20">
        <Sequence DisplayName="Les inn fil" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="strPDFFilePath" />
          </Sequence.Variables>
          <p:WordApplicationScope DisplayName="Eksporter rtf-fil til PDF" FilePath="[strFilePath]" sap2010:WorkflowViewState.IdRef="WordApplicationScope_2">
            <p:WordApplicationScope.Body>
              <ActivityAction x:TypeArguments="ui:WordDocument">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:WordDocument" Name="WordDocumentScope" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap2010:WorkflowViewState.IdRef="Sequence_7">
                  <Assign sap2010:WorkflowViewState.IdRef="Assign_7">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:String">[strPDFFilePath]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:String">[strFilePath.Replace("rtf","pdf")]</InArgument>
                    </Assign.Value>
                  </Assign>
                  <p:WordExportToPdf DisplayName="Export to PDF" FilePath="[strPDFFilePath]" sap2010:WorkflowViewState.IdRef="WordExportToPdf_2" />
                </Sequence>
              </ActivityAction>
            </p:WordApplicationScope.Body>
          </p:WordApplicationScope>
          <ui:ReadPDFText DisplayName="Les PDF-fil" FileName="[strPDFFilePath]" sap2010:WorkflowViewState.IdRef="ReadPDFText_4" Range="All" Text="[strPlainText]" />
        </Sequence>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_21">
            <Sequence DisplayName="Strukturer input" sap2010:WorkflowViewState.IdRef="Sequence_9">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:String" Name="strStrukturert" />
              </Sequence.Variables>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_8">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[strArrayOrder]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[Split(strPlainText, vbCrLf)]</InArgument>
                </Assign.Value>
              </Assign>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_9">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strStrukturert]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">
                    <Literal x:TypeArguments="x:String" Value="" />
                  </InArgument>
                </Assign.Value>
              </Assign>
              <ui:ForEach x:TypeArguments="x:String" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_6" Values="[strArrayOrder]">
                <ui:ForEach.Body>
                  <ActivityAction x:TypeArguments="x:String">
                    <ActivityAction.Argument>
                      <DelegateInArgument x:TypeArguments="x:String" Name="line" />
                    </ActivityAction.Argument>
                    <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_10">
                      <If Condition="[line = &quot;&quot; Or _&#xA;line = &quot; &quot; Or _&#xA;line = vbCrLf]" sap2010:WorkflowViewState.IdRef="If_2">
                        <If.Else>
                          <Assign sap2010:WorkflowViewState.IdRef="Assign_10">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[strStrukturert]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[strStrukturert + line + vbCrLf]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </If.Else>
                      </If>
                    </Sequence>
                  </ActivityAction>
                </ui:ForEach.Body>
              </ui:ForEach>
              <Assign sap2010:WorkflowViewState.IdRef="Assign_11">
                <Assign.To>
                  <OutArgument x:TypeArguments="s:String[]">[strArrayOrder]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="s:String[]">[Split(strStrukturert.Substring(0, strStrukturert.Length - 2), vbCrLf)]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <FlowStep.Next>
              <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_22">
                <Sequence sap2010:Annotation.AnnotationText="BillToStreet, BillToZip, BillToCity, BuyerTPID, TPID, Comment" DisplayName="Legg til blanke og statiske felter" sap2010:WorkflowViewState.IdRef="Sequence_12">
                  <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_1" Key="billstreet1">
                    <maes:AddToDictionary.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </maes:AddToDictionary.Value>
                  </maes:AddToDictionary>
                  <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_2" Key="billtozip">
                    <maes:AddToDictionary.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </maes:AddToDictionary.Value>
                  </maes:AddToDictionary>
                  <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_3" Key="billtocity">
                    <maes:AddToDictionary.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </maes:AddToDictionary.Value>
                  </maes:AddToDictionary>
                  <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_4" Key="buyerTPID" Value="e57c72fe-7a4d-1000-b842-c0a878320001" />
                  <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_5" Key="TPID" Value="Kermit Helse Førde" />
                  <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_7" Key="Comment">
                    <maes:AddToDictionary.Value>
                      <InArgument x:TypeArguments="x:String">
                        <Literal x:TypeArguments="x:String" Value="" />
                      </InArgument>
                    </maes:AddToDictionary.Value>
                  </maes:AddToDictionary>
                </Sequence>
                <FlowStep.Next>
                  <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_23">
                    <Sequence sap2010:Annotation.AnnotationText="OrderPersonEmail, ContactName, OrderPersonPhone" DisplayName="Kontaktinformasjon" sap2010:WorkflowViewState.IdRef="Sequence_13">
                      <Sequence DisplayName="OrderPersonEmail" sap2010:WorkflowViewState.IdRef="Sequence_14">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="strOrderPersonEmail" />
                        </Sequence.Variables>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_13">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strOrderPersonEmail]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strArrayOrder(13), "[A-Za-z0-9.]+@{1}[A-Za-z0-9.-]+.{1}[A-Za-z0-9]+").Value]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_8" Key="orderpersonemail" Value="[strOrderPersonEmail]" />
                        <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[&quot;Order person email: &quot; + strOrderPersonEmail]" />
                      </Sequence>
                      <Sequence DisplayName="ContactName" sap2010:WorkflowViewState.IdRef="Sequence_15">
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strContactName]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strArrayOrder(11).Substring(strArrayOrder(11).IndexOf("Vår ref.: ") + "Vår ref.:".Length), "[A-ÅÆØÅa-åæøå\s]+").Value.Trim]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_9" Key="contactname" Value="[strContactName]" />
                        <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="[&quot;Contact name: &quot; + strContactName]" />
                      </Sequence>
                      <Sequence DisplayName="OrderPersonPhone" sap2010:WorkflowViewState.IdRef="Sequence_16">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="strOrderPersonPhone" />
                        </Sequence.Variables>
                        <Assign sap2010:WorkflowViewState.IdRef="Assign_15">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[strOrderPersonPhone]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[strArrayOrder(12).Substring(strArrayOrder(12).IndexOf("Tlf.: ")+"Tlf.: ".Length, 8)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_10" Key="orderpersonphone" Value="[strOrderPersonPhone]" />
                        <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_12" Text="[&quot;Order person phone: &quot; + strOrderPersonPhone]" />
                      </Sequence>
                    </Sequence>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_24">
                        <Sequence sap2010:Annotation.AnnotationText="ShipCompanyName, ShipToStreet, ShipZip, ShipCity" DisplayName="Leveringsadresse" sap2010:WorkflowViewState.IdRef="Sequence_17">
                          <Sequence.Variables>
                            <Variable x:TypeArguments="s:String[]" Name="strArrayShipCompany" />
                          </Sequence.Variables>
                          <Sequence DisplayName="ShipCompanyName og ShipToStreet" sap2010:WorkflowViewState.IdRef="Sequence_19">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="x:Int32" Default="4" Name="counterFirstSentence" />
                              <Variable x:TypeArguments="x:Int32" Default="2" Name="counterSecondSentence" />
                              <Variable x:TypeArguments="ui:GenericValue" Name="counterThirdSentence" />
                              <Variable x:TypeArguments="x:String" Name="strTemp" />
                            </Sequence.Variables>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_19">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:String[]">[strArrayShipCompany]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:String[]">[Split(strArrayOrder(0), " ")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <While sap2010:WorkflowViewState.IdRef="While_1" Condition="[counterFirstSentence &lt; strArrayShipCompany.Length]">
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_20">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strShipCompanyName]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[strShipCompanyName + strArrayShipCompany(counterFirstSentence) + " "]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_22">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[counterFirstSentence]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[counterFirstSentence + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </While>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strShipCompanyName]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strShipCompanyName.Trim + ", "]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:String[]">[strArrayShipCompany]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:String[]">[Split(strArrayOrder(1), " ")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <While sap2010:WorkflowViewState.IdRef="While_2" Condition="[counterSecondSentence &lt; strArrayShipCompany.Length]">
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_25">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strShipCompanyName]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[strShipCompanyName + strArrayShipCompany(counterSecondSentence) + " "]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_26">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:Int32">[counterSecondSentence]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:Int32">[counterSecondSentence + 1]</InArgument>
                                  </Assign.Value>
                                </Assign>
                              </Sequence>
                            </While>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_27">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:String[]">[strArrayShipCompany]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:String[]">[Split(strArrayOrder(2), " ")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <If Condition="[strArrayShipCompany.Length &gt; 7]" DisplayName="Finn siste del av strengen på 3.linje" sap2010:WorkflowViewState.IdRef="If_3">
                              <If.Then>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_28">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="ui:GenericValue">[counterThirdSentence]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="ui:GenericValue">[7]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strTemp]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">
                                        <Literal x:TypeArguments="x:String" Value="" />
                                      </InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <While sap2010:WorkflowViewState.IdRef="While_3" Condition="[counterThirdSentence &lt; strArrayShipCompany.Length]">
                                    <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_34">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[strTemp]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[strTemp + strArrayShipCompany(counterThirdSentence) + " "]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <Assign sap2010:WorkflowViewState.IdRef="Assign_31">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="ui:GenericValue">[counterThirdSentence]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="ui:GenericValue">[counterThirdSentence + 1]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </Sequence>
                                  </While>
                                </Sequence>
                              </If.Then>
                            </If>
                            <If Condition="[System.Text.RegularExpressions.Regex.Match(strTemp, &quot;[A-ÅÆØÅa-åeøå]+ [0-9]+&quot;).Success]" DisplayName="Sjekk om strengen skal være en del av ShipCompanyName eller ShipToStreet" sap2010:WorkflowViewState.IdRef="If_4">
                              <If.Then>
                                <Sequence sap2010:Annotation.AnnotationText="Legg til ShipToStreet i Dictionary" DisplayName="ShipToStreet" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                  <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_14" Key="shiptostreet" Value="[strTemp]" />
                                  <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_16" Text="[&quot;Ship to street: &quot; + strTemp]" />
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:Annotation.AnnotationText="Legg til resten av ShipCompanyName, og finn ShipToStreet" DisplayName="Legg til resten i ShipCompanyName, og finn ShipToStreet" sap2010:WorkflowViewState.IdRef="Sequence_27">
                                  <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[strShipCompanyName]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[strShipCompanyName.Trim + ", " + strTemp.Trim]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Sequence DisplayName="ShipToStreet" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:Int32" Default="2" Name="counterFourthSentence" />
                                      <Variable x:TypeArguments="x:String" Name="strShipToStreet" />
                                    </Sequence.Variables>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strShipToStreet]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:String[]">[strArrayShipCompany]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:String[]">[Split(strArrayOrder(3), " ")]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <While sap2010:WorkflowViewState.IdRef="While_4" Condition="[counterFourthSentence &lt; strArrayShipCompany.Length]">
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_28">
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strShipToStreet]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[strShipToStreet + strArrayShipCompany(counterFourthSentence) + " "]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[counterFourthSentence]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[counterFourthSentence + 1]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </While>
                                    <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_15" Key="shiptostreet" Value="[strShipToStreet.Trim]" />
                                    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_17" Text="[&quot;Ship to street: &quot; + strShipToStreet.Trim]" />
                                  </Sequence>
                                </Sequence>
                              </If.Else>
                            </If>
                            <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_13" Key="shipcompanyname" Value="[strShipCompanyName.Trim]" />
                            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_15" Text="[&quot;Ship company name: &quot; + strShipCompanyName.Trim]" />
                          </Sequence>
                          <Sequence DisplayName="ShipZip og ShipCity" sap2010:WorkflowViewState.IdRef="Sequence_18">
                            <Sequence.Variables>
                              <Variable x:TypeArguments="s:String[]" Name="strArrayZipCity" />
                              <Variable x:TypeArguments="x:String" Name="strShipZip" />
                              <Variable x:TypeArguments="x:String" Name="strShipCity" />
                            </Sequence.Variables>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_16">
                              <Assign.To>
                                <OutArgument x:TypeArguments="s:String[]">[strArrayZipCity]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="s:String[]">[Split(strArrayOrder(4), " ")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_17">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strShipZip]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strArrayZipCity(0)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_18">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strShipCity]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[strArrayZipCity(1)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_11" Key="shipzip" Value="[strShipZip]" />
                            <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_12" Key="shipcity" Value="[strShipCity]" />
                            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_13" Text="[&quot;Ship to zip: &quot; + strShipZip]" />
                            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_14" Text="[&quot;Ship to city: &quot; + strShipCity]" />
                          </Sequence>
                        </Sequence>
                        <FlowStep.Next>
                          <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_25">
                            <Sequence sap2010:Annotation.AnnotationText="BillCompanyName, CompanyOrg, &#xA;PONumber" DisplayName="Organisasjonsinformasjon" sap2010:WorkflowViewState.IdRef="Sequence_29">
                              <Sequence DisplayName="BillCompanyName" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="strBillCompanyName" />
                                </Sequence.Variables>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strBillCompanyName]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[strContactName + ", " + strShipCompanyName]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_16" Key="billcompanyname" Value="[strBillCompanyName]" />
                                <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_18" Text="[&quot;Bill company name: &quot; + strBillCompanyName]" />
                              </Sequence>
                              <Sequence DisplayName="Company Org." sap2010:WorkflowViewState.IdRef="Sequence_31">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="strCompanyOrg" />
                                </Sequence.Variables>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strCompanyOrg]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strArrayOrder(3), "[0-9]{5,}").Value]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_17" Key="companyorg" Value="[strCompanyOrg]" />
                                <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_19" Text="[&quot;Company Org: &quot; + strCompanyOrg]" />
                              </Sequence>
                              <Sequence DisplayName="PONumber" sap2010:WorkflowViewState.IdRef="Sequence_32">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Name="strPONumber" />
                                </Sequence.Variables>
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="x:String">[strPONumber]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="x:String">[System.Text.RegularExpressions.Regex.Match(strArrayOrder(1), "[0-9]{3,}").Value]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <maes:AddToDictionary x:TypeArguments="x:String, x:String" Dictionary="[orderInfoDict]" DisplayName="Add to dictionary" sap2010:WorkflowViewState.IdRef="AddToDictionary`2_18" Key="ponumber" Value="[strPONumber]" />
                                <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_20" Text="[&quot;PO Number: &quot; + strPONumber]" />
                              </Sequence>
                            </Sequence>
                            <FlowStep.Next>
                              <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_26">
                                <Sequence sap2010:Annotation.AnnotationText="OrderRow, OrderPart, OrderDescription, OrderUnits, OrderPrice" DisplayName="Ordrelinjer" sap2010:WorkflowViewState.IdRef="Sequence_33">
                                  <Sequence.Variables>
                                    <Variable x:TypeArguments="x:String" Name="strOrdreLinjer" />
                                  </Sequence.Variables>
                                  <Sequence DisplayName="Hent ut linjene som inneholder ordreinformasjon" sap2010:WorkflowViewState.IdRef="Sequence_34">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="x:Int32" Default="14" Name="intCounter" />
                                    </Sequence.Variables>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_44">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strOrdreLinjer]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <While sap2010:WorkflowViewState.IdRef="While_5" Condition="[intCounter &lt; strArrayOrder.Length]">
                                      <Sequence DisplayName="Hent ut ordrelinjene" sap2010:WorkflowViewState.IdRef="Sequence_35">
                                        <If Condition="[System.Text.RegularExpressions.Regex.Match(strArrayOrder(intCounter), &quot;[0-9]+ stk&quot;).Success]" sap2010:WorkflowViewState.IdRef="If_5">
                                          <If.Then>
                                            <Assign sap2010:WorkflowViewState.IdRef="Assign_46">
                                              <Assign.To>
                                                <OutArgument x:TypeArguments="x:String">[strOrdreLinjer]</OutArgument>
                                              </Assign.To>
                                              <Assign.Value>
                                                <InArgument x:TypeArguments="x:String">[strOrdreLinjer + strArrayOrder(intCounter) + vbCrLf]</InArgument>
                                              </Assign.Value>
                                            </Assign>
                                          </If.Then>
                                        </If>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_45">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[intCounter]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[intCounter + 1]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </While>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_47">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strOrdreLinjer]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[strOrdreLinjer.Substring(0, strOrdreLinjer.Length - 2)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                  <Sequence DisplayName="Strukturer ordrelinjer" sap2010:WorkflowViewState.IdRef="Sequence_36">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="s:String[]" Name="strArrayOrdreLinjer" />
                                      <Variable x:TypeArguments="x:Int32" Default="0" Name="intCounterOrdreLinjer" />
                                    </Sequence.Variables>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_48">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="s:String[]">[strArrayOrdreLinjer]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="s:String[]">[Split(strOrdreLinjer, vbCrLf)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_49">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strOrdreLinjer]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">
                                          <Literal x:TypeArguments="x:String" Value="" />
                                        </InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <While sap2010:WorkflowViewState.IdRef="While_6">
                                      <While.Variables>
                                        <Variable x:TypeArguments="s:String[]" Name="strArrayTemp" />
                                      </While.Variables>
                                      <While.Condition>[intCounterOrdreLinjer &lt; strArrayOrdreLinjer.Length]</While.Condition>
                                      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_38">
                                        <Assign DisplayName="OrderRow" sap2010:WorkflowViewState.IdRef="Assign_51">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strOrdreLinjer]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[strOrdreLinjer + (intCounterOrdreLinjer + 1).ToString + "///"]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_52">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="s:String[]">[strArrayTemp]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="s:String[]">[Split(strArrayOrdreLinjer(intCounterOrdreLinjer).Trim, " ")]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="OrderPart" sap2010:WorkflowViewState.IdRef="Assign_53">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strOrdreLinjer]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[strOrdreLinjer + strArrayTemp(2).Trim + "///"]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Sequence DisplayName="OrderDescription" sap2010:WorkflowViewState.IdRef="Sequence_39">
                                          <Sequence.Variables>
                                            <Variable x:TypeArguments="x:Int32" Default="3" Name="intCounterOrderDescription" />
                                            <Variable x:TypeArguments="x:String" Name="strOrderDescription" />
                                          </Sequence.Variables>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_54">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strOrderDescription]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">
                                                <Literal x:TypeArguments="x:String" Value="" />
                                              </InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <While sap2010:WorkflowViewState.IdRef="While_7" Condition="[intCounterOrderDescription &lt; strArrayTemp.Length - 1]">
                                            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_40">
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_55">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[strOrderDescription]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[strOrderDescription + strArrayTemp(intCounterOrderDescription) + " "]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign sap2010:WorkflowViewState.IdRef="Assign_56">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">[intCounterOrderDescription]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">[intCounterOrderDescription + 1]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </While>
                                          <Assign sap2010:WorkflowViewState.IdRef="Assign_57">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[strOrdreLinjer]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[strOrdreLinjer + strOrderDescription.Trim + "///"]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                        <Assign DisplayName="OrderUnits" sap2010:WorkflowViewState.IdRef="Assign_58">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strOrdreLinjer]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[strOrdreLinjer + strArrayTemp(0) + "///"]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign DisplayName="OrderPrice" sap2010:WorkflowViewState.IdRef="Assign_59">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:String">[strOrdreLinjer]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:String">[strOrdreLinjer + strArrayTemp(strArrayTemp.Length - 1) + vbCrLf]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                        <Assign sap2010:WorkflowViewState.IdRef="Assign_60">
                                          <Assign.To>
                                            <OutArgument x:TypeArguments="x:Int32">[intCounterOrdreLinjer]</OutArgument>
                                          </Assign.To>
                                          <Assign.Value>
                                            <InArgument x:TypeArguments="x:Int32">[intCounterOrdreLinjer + 1]</InArgument>
                                          </Assign.Value>
                                        </Assign>
                                      </Sequence>
                                    </While>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_61">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[strOrdreLinjer]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[strOrdreLinjer.Substring(0, strOrdreLinjer.Length - 2)]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                  <Sequence DisplayName="Legg ordrelinjer i datatable" sap2010:WorkflowViewState.IdRef="Sequence_41">
                                    <a:orderLinesToDatatable Delimiter="///" DisplayName="Order lines to datatable" sap2010:WorkflowViewState.IdRef="orderLinesToDatatable_1" InputString="[strOrdreLinjer]" dtOutput="[itemInfo]" />
                                  </Sequence>
                                  <Sequence DisplayName="Test" sap2010:WorkflowViewState.IdRef="Sequence_42">
                                    <ui:ForEachRow DataTable="[itemInfo]" DisplayName="For each row" sap2010:WorkflowViewState.IdRef="ForEachRow_1">
                                      <ui:ForEachRow.Body>
                                        <ActivityAction x:TypeArguments="sd:DataRow">
                                          <ActivityAction.Argument>
                                            <DelegateInArgument x:TypeArguments="sd:DataRow" Name="row" />
                                          </ActivityAction.Argument>
                                          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_43">
                                            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_22" Text="[&quot;Order row: &quot; + row(0).ToString]" />
                                            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_23" Text="[&quot;Order part: &quot; + row(1).ToString]" />
                                            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_24" Text="[&quot;Order description: &quot; + row(2).ToString]" />
                                            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_25" Text="[&quot;Order units: &quot; + row(3).ToString]" />
                                            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_26" Text="[&quot;Order price: &quot; + row(4).ToString]" />
                                          </Sequence>
                                        </ActivityAction>
                                      </ui:ForEachRow.Body>
                                    </ui:ForEachRow>
                                  </Sequence>
                                </Sequence>
                              </FlowStep>
                            </FlowStep.Next>
                          </FlowStep>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowStep.Next>
              </FlowStep>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="WordExportToPdf_2" sap:VirtualizedContainerService.HintSize="314.4,60" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="336.8,284.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WordApplicationScope_2" sap:VirtualizedContainerService.HintSize="314.4,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ReadPDFText_4" sap:VirtualizedContainerService.HintSize="314.4,60">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_8" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_9" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="464,213.6" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="486.4,338.4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_6" sap:VirtualizedContainerService.HintSize="243.2,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_1" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_2" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_3" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_4" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_5" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_7" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="200,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="AddToDictionary`2_8" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_10" sap:VirtualizedContainerService.HintSize="271.2,62.4" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="293.6,396.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="AddToDictionary`2_9" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_11" sap:VirtualizedContainerService.HintSize="271.2,62.4" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="293.6,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="AddToDictionary`2_10" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_12" sap:VirtualizedContainerService.HintSize="271.2,62.4" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="293.6,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="200,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_19" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_22" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="271.2,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="Assign_25" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_26" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="271.2,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_27" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="Assign_28" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="265.6,284.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_3" sap:VirtualizedContainerService.HintSize="243.2,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="265.6,377.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="271.2,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_14" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_16" sap:VirtualizedContainerService.HintSize="271.2,62.4" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="200,96.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="243.2,60" />
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="265.6,284.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_4" sap:VirtualizedContainerService.HintSize="271.2,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_15" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_17" sap:VirtualizedContainerService.HintSize="271.2,62.4" />
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="243.2,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="200,112.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="271.2,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_13" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_15" sap:VirtualizedContainerService.HintSize="271.2,62.4" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="Assign_17" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="Assign_18" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="AddToDictionary`2_11" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToDictionary`2_12" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_13" sap:VirtualizedContainerService.HintSize="271.2,62.4" />
      <sap2010:ViewStateData Id="WriteLine_14" sap:VirtualizedContainerService.HintSize="271.2,62.4" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="200,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="AddToDictionary`2_16" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_18" sap:VirtualizedContainerService.HintSize="271.2,62.4" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="293.6,396.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="AddToDictionary`2_17" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_19" sap:VirtualizedContainerService.HintSize="271.2,62.4" />
      <sap2010:ViewStateData Id="Sequence_31" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="271.2,60" />
      <sap2010:ViewStateData Id="AddToDictionary`2_18" sap:VirtualizedContainerService.HintSize="271.2,69.6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_20" sap:VirtualizedContainerService.HintSize="271.2,62.4" />
      <sap2010:ViewStateData Id="Sequence_32" sap:VirtualizedContainerService.HintSize="200,52.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="200,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_44" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_46" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="464,208">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_45" sap:VirtualizedContainerService.HintSize="464,60" />
      <sap2010:ViewStateData Id="Sequence_35" sap:VirtualizedContainerService.HintSize="486,432">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_5" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_47" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_48" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_49" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_51" sap:VirtualizedContainerService.HintSize="264,60" />
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="264,60" />
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="264,60" />
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_55" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_56" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_40" sap:VirtualizedContainerService.HintSize="264,284">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_7" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_39" sap:VirtualizedContainerService.HintSize="264,375">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="264,60" />
      <sap2010:ViewStateData Id="Assign_59" sap:VirtualizedContainerService.HintSize="264,60" />
      <sap2010:ViewStateData Id="Assign_60" sap:VirtualizedContainerService.HintSize="264,60" />
      <sap2010:ViewStateData Id="Sequence_38" sap:VirtualizedContainerService.HintSize="286,1099">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_6" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_61" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="orderLinesToDatatable_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_41" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteLine_22" sap:VirtualizedContainerService.HintSize="210.4,62.4" />
      <sap2010:ViewStateData Id="WriteLine_23" sap:VirtualizedContainerService.HintSize="210.4,62.4" />
      <sap2010:ViewStateData Id="WriteLine_24" sap:VirtualizedContainerService.HintSize="210.4,62.4" />
      <sap2010:ViewStateData Id="WriteLine_25" sap:VirtualizedContainerService.HintSize="210.4,62.4" />
      <sap2010:ViewStateData Id="WriteLine_26" sap:VirtualizedContainerService.HintSize="210.4,62.4" />
      <sap2010:ViewStateData Id="Sequence_43" sap:VirtualizedContainerService.HintSize="232.8,596.8">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEachRow_1" sap:VirtualizedContainerService.HintSize="287.2,745.6" />
      <sap2010:ViewStateData Id="Sequence_42" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="222,505">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_26">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">30,368.08</av:Point>
            <av:Size x:Key="ShapeSize">200,108</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_25">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">300,367.66</av:Point>
            <av:Size x:Key="ShapeSize">200,108</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,421.66 270,421.66 270,422.08 230,422.08</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_24">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">560,367.24</av:Point>
            <av:Size x:Key="ShapeSize">200,108</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">560,421.24 530,421.24 530,421.66 500,421.66</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_23">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">560,204.44</av:Point>
            <av:Size x:Key="ShapeSize">200,108</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">660,312.44 660,367.24</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_22">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">300,204.02</av:Point>
            <av:Size x:Key="ShapeSize">200,108</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">500,258.02 530,258.02 530,258.44 560,258.44</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">30,233.6</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">230,259.1 260,259.1 260,258.02 300,258.02</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_20">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">300,123.6</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,150 130,150 130,233.6</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="859,726">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">370,2.4</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Double x:Key="Width">844.8</x:Double>
            <x:Double x:Key="Height">690.39999999999986</x:Double>
            <av:PointCollection x:Key="ConnectorLocation">400,77.6 400,123.6</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="RTF_test_1" sap:VirtualizedContainerService.HintSize="899,806" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>